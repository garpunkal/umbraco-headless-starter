// This file is auto-generated by @hey-api/openapi-ts

import type { GetContentResponse, GetContent20Response, GetContentItemResponse, GetContentItemByPathResponse, GetContentItemByPath20Response, GetContentItemByIdResponse, GetContentItemById20Response, GetContentItems20Response, GetMediaResponse, GetMedia20Response, GetMediaItemResponse, GetMediaItemByPathResponse, GetMediaItemByPath20Response, GetMediaItemByIdResponse, GetMediaItemById20Response, GetMediaItems20Response } from './types.gen';

const iApiContentModelBaseSchemaResponseTransformer = (data: any) => {
    if (data.createDate) {
        data.createDate = new Date(data.createDate);
    }
    if (data.updateDate) {
        data.updateDate = new Date(data.updateDate);
    }
    return data;
};

const iApiContentResponseModelBaseSchemaResponseTransformer = (data: any) => {
    data = iApiContentModelBaseSchemaResponseTransformer(data);
    if (data.createDate) {
        data.createDate = new Date(data.createDate);
    }
    if (data.updateDate) {
        data.updateDate = new Date(data.updateDate);
    }
    return data;
};

const homeContentModelSchemaResponseTransformer = (data: any) => {
    data = iApiContentModelBaseSchemaResponseTransformer(data);
    return data;
};

const homeContentResponseModelSchemaResponseTransformer = (data: any) => {
    data = iApiContentResponseModelBaseSchemaResponseTransformer(data);
    data = homeContentModelSchemaResponseTransformer(data);
    return data;
};

const iApiContentResponseModelSchemaResponseTransformer = (data: any) => {
    data = homeContentResponseModelSchemaResponseTransformer(data);
    return data;
};

const pagedIApiContentResponseModelSchemaResponseTransformer = (data: any) => {
    data.total = BigInt(data.total.toString());
    data.items = data.items.map((item: any) => {
        return iApiContentResponseModelSchemaResponseTransformer(item);
    });
    return data;
};

export const getContentResponseTransformer = async (data: any): Promise<GetContentResponse> => {
    data = pagedIApiContentResponseModelSchemaResponseTransformer(data);
    return data;
};

export const getContent20ResponseTransformer = async (data: any): Promise<GetContent20Response> => {
    data = pagedIApiContentResponseModelSchemaResponseTransformer(data);
    return data;
};

export const getContentItemResponseTransformer = async (data: any): Promise<GetContentItemResponse> => {
    data = data.map((item: any) => {
        return iApiContentResponseModelSchemaResponseTransformer(item);
    });
    return data;
};

export const getContentItemByPathResponseTransformer = async (data: any): Promise<GetContentItemByPathResponse> => {
    data = iApiContentResponseModelSchemaResponseTransformer(data);
    return data;
};

export const getContentItemByPath20ResponseTransformer = async (data: any): Promise<GetContentItemByPath20Response> => {
    data = iApiContentResponseModelSchemaResponseTransformer(data);
    return data;
};

export const getContentItemByIdResponseTransformer = async (data: any): Promise<GetContentItemByIdResponse> => {
    data = iApiContentResponseModelSchemaResponseTransformer(data);
    return data;
};

export const getContentItemById20ResponseTransformer = async (data: any): Promise<GetContentItemById20Response> => {
    data = iApiContentResponseModelSchemaResponseTransformer(data);
    return data;
};

export const getContentItems20ResponseTransformer = async (data: any): Promise<GetContentItems20Response> => {
    data = data.map((item: any) => {
        return iApiContentResponseModelSchemaResponseTransformer(item);
    });
    return data;
};

const iApiMediaWithCropsResponseModelSchemaResponseTransformer = (data: any) => {
    if (data.createDate) {
        data.createDate = new Date(data.createDate);
    }
    if (data.updateDate) {
        data.updateDate = new Date(data.updateDate);
    }
    return data;
};

const pagedIApiMediaWithCropsResponseModelSchemaResponseTransformer = (data: any) => {
    data.total = BigInt(data.total.toString());
    data.items = data.items.map((item: any) => {
        return iApiMediaWithCropsResponseModelSchemaResponseTransformer(item);
    });
    return data;
};

export const getMediaResponseTransformer = async (data: any): Promise<GetMediaResponse> => {
    data = pagedIApiMediaWithCropsResponseModelSchemaResponseTransformer(data);
    return data;
};

export const getMedia20ResponseTransformer = async (data: any): Promise<GetMedia20Response> => {
    data = pagedIApiMediaWithCropsResponseModelSchemaResponseTransformer(data);
    return data;
};

export const getMediaItemResponseTransformer = async (data: any): Promise<GetMediaItemResponse> => {
    data = data.map((item: any) => {
        return iApiMediaWithCropsResponseModelSchemaResponseTransformer(item);
    });
    return data;
};

export const getMediaItemByPathResponseTransformer = async (data: any): Promise<GetMediaItemByPathResponse> => {
    data = iApiMediaWithCropsResponseModelSchemaResponseTransformer(data);
    return data;
};

export const getMediaItemByPath20ResponseTransformer = async (data: any): Promise<GetMediaItemByPath20Response> => {
    data = iApiMediaWithCropsResponseModelSchemaResponseTransformer(data);
    return data;
};

export const getMediaItemByIdResponseTransformer = async (data: any): Promise<GetMediaItemByIdResponse> => {
    data = iApiMediaWithCropsResponseModelSchemaResponseTransformer(data);
    return data;
};

export const getMediaItemById20ResponseTransformer = async (data: any): Promise<GetMediaItemById20Response> => {
    data = iApiMediaWithCropsResponseModelSchemaResponseTransformer(data);
    return data;
};

export const getMediaItems20ResponseTransformer = async (data: any): Promise<GetMediaItems20Response> => {
    data = data.map((item: any) => {
        return iApiMediaWithCropsResponseModelSchemaResponseTransformer(item);
    });
    return data;
};